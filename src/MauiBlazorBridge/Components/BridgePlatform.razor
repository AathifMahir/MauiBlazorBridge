@namespace MauiBlazorBridge
@inject IBridge Bridge
@implements IDisposable

@if(Bridge.Platform is PlatformIdentity.Android && Android is not null)
{
    @Android
}
else if (Bridge.Platform is PlatformIdentity.IOS && IOS is not null)
{
    @IOS
}
else if (Bridge.Platform is PlatformIdentity.Windows && Windows is not null)
{
    @Windows
}
else if (Bridge.Platform is PlatformIdentity.Mac && Windows is not null)
{
    @Mac
}
else
{
    @Default
}

@code {
    [Parameter]
    public RenderFragment? Android { get; set; }

    [Parameter]
    public RenderFragment? IOS { get; set; }

    [Parameter]
    public RenderFragment? Windows { get; set; }

    [Parameter]
    public RenderFragment? Mac { get; set; }

    [Parameter]
    public RenderFragment? Default { get; set; }


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Bridge.PlatformChanged += PlatformChanged;
        }

        base.OnAfterRender(firstRender);
    }

    private void PlatformChanged(object? sender, PlatformIdentity e) => StateHasChanged();

    public void Dispose() => Bridge.PlatformChanged -= PlatformChanged;
}
