@namespace MauiBlazorBridge
@inject IBridgeConnectivity BridgeConnection
@implements IDisposable

@if (isOnline)
{
    @Online
}
else
{
    @Offline
}



@code {

    [Parameter]
    public RenderFragment? Online { get; set; }

    [Parameter]
    public RenderFragment? Offline { get; set; }

    [Parameter]
    public bool InternetConnection { get; set; }

    [Parameter]
    public EventCallback<bool> InternetConnectionChanged { get; set; }

    bool isOnline = false;


    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            isOnline = BridgeConnection.IsInternetConnected;
            InternetConnectionChanged.InvokeAsync(isOnline);
            BridgeConnection.InternetConnectionChanged += Bridge_OnInternetConnectionChanged;
        }
        base.OnAfterRender(firstRender);
    }

    private void Bridge_OnInternetConnectionChanged(object? sender, bool e)
    {
        if (isOnline == e) return;

        isOnline = e;
        InternetConnectionChanged.InvokeAsync(e);
        StateHasChanged();
    }

    public void Dispose()
    {
        BridgeConnection.InternetConnectionChanged -= Bridge_OnInternetConnectionChanged;
    }

}
